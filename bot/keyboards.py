from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Optional
from database.models import Post, RSSSource
from config.settings import AI_MODELS


class Keyboards:
    @staticmethod
    def main_admin_menu():
        keyboard = [
            [InlineKeyboardButton(text="üìä –ú–æ–∏ –∫–∞–Ω–∞–ª—ã", callback_data="my_channels")],
            [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel")],
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def channel_menu(channel_id: int):
        keyboard = [
            [InlineKeyboardButton(text="üìù –û—á–µ—Ä–µ–¥—å –ø–æ—Å—Ç–æ–≤", callback_data=f"queue_{channel_id}")],
            [InlineKeyboardButton(text="üì∞ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏", callback_data=f"rss_{channel_id}")],
            [InlineKeyboardButton(text="ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AI", callback_data=f"ai_{channel_id}")],
            [InlineKeyboardButton(text="‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"schedule_{channel_id}")],
            [InlineKeyboardButton(text="‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data=f"create_{channel_id}")],
            [InlineKeyboardButton(text="‚è∏Ô∏è –ü–∞—É–∑–∞/–°—Ç–∞—Ä—Ç", callback_data=f"toggle_{channel_id}")],
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data=f"delete_{channel_id}")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞–Ω–∞–ª–∞–º", callback_data="my_channels")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def rss_sources_menu(channel_id: int, sources: List[RSSSource]):
        keyboard = []
        for source in sources:
            status = "‚úÖ" if source.is_active else "‚ùå"
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{status} {source.name[:30]}",
                    callback_data=f"source_{source.id}"
                )
            ])

        keyboard.append([
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å RSS", callback_data=f"add_rss_{channel_id}"),
        ])
        keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"channel_{channel_id}")])

        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def schedule_menu(channel_id: int, current_interval: int):
        intervals = {
            "30 –º–∏–Ω—É—Ç": 1800,
            "1 —á–∞—Å": 3600,
            "2 —á–∞—Å–∞": 7200,
            "4 —á–∞—Å–∞": 14400,
            "8 —á–∞—Å–æ–≤": 28800,
            "24 —á–∞—Å–∞": 86400,
        }
        keyboard = []
        row = []
        for text, seconds in intervals.items():
            prefix = "‚úÖ " if seconds == current_interval else ""
            row.append(InlineKeyboardButton(
                text=prefix + text,
                callback_data=f"set_interval_{channel_id}_{seconds}"
            ))
            if len(row) == 2:
                keyboard.append(row)
                row = []
        if row:
            keyboard.append(row)

        keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"channel_{channel_id}")])
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def post_queue_menu(channel_id: int, posts: List[Post]):
        keyboard = []
        for post in posts[:10]:
            time_str = post.scheduled_time.strftime("%d.%m %H:%M")
            keyboard.append([
                InlineKeyboardButton(
                    text=f"üìù {time_str} - {post.original_title[:25]}",
                    callback_data=f"post_{post.id}"
                )
            ])

        keyboard.append([
            InlineKeyboardButton(text="üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π", callback_data=f"publish_now_{channel_id}"),
            InlineKeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å", callback_data=f"clear_queue_{channel_id}")
        ])
        keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"channel_{channel_id}")])

        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def moderation_menu(post_id: int):
        keyboard = [
            [
                InlineKeyboardButton(text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"approve_{post_id}"),
                InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_{post_id}")
            ],
            [
                InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{post_id}"),
                InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_{post_id}")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def ai_settings_menu(channel_id: int, moderation_on: bool):
        moderation_text = "–í—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é üü¢" if moderation_on else "–í–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é üî¥"
        keyboard = [
            [InlineKeyboardButton(text="ü§ñ –ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å AI", callback_data=f"ai_model_{channel_id}")],
            [InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç", callback_data=f"ai_prompt_{channel_id}")],
            [InlineKeyboardButton(text=moderation_text, callback_data=f"moderation_{channel_id}")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"channel_{channel_id}")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def ai_models_menu(channel_id: int, current_model: str):
        keyboard = []
        for model in AI_MODELS:
            text = f"‚úÖ {model}" if model == current_model else model
            keyboard.append([
                InlineKeyboardButton(text=text, callback_data=f"set_model_{channel_id}_{model}")
            ])

        keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"ai_{channel_id}")])
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def confirm_delete(channel_id: int):
        keyboard = [
            [
                InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{channel_id}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"channel_{channel_id}")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
